<?php

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Crux\Type Namespace //////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace Crux\Type;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Crux\Type\IsVariant Interface Definition /////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

interface IsVariant
{
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Constants ////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This constant defines an original variable type of Array
	 * @name \Crux\Type\IsVariant::Array
	 * @package \Crux\Type\IsVariant
	 * @static
	 * @var int
	 */
	const Array = 0x01;

	/**
	 * This constant defines the original variable type as a custom class
	 * @name \Crux\Type\IsVariant::Custom
	 * @package \Crux\Type\IsVariant
	 * @static
	 * @var int
	 */
	const Custom = 0x02;

	/**
	 * This constant defines an original variable type of \Crux\Collection\Map
	 * @name \Crux\Type\IsVariant::Map
	 * @package \Crux\Type\IsVariant
	 * @static
	 * @var int
	 */
	const Map = 0x03;

	/**
	 * This constant defines an original variable type of \stdClass
	 * @name \Crux\Type\IsVariant::Object
	 * @package \Crux\Type\IsVariant
	 * @static
	 * @var int
	 */
	const Object = 0x04;

	/**
	 * This constant defines an original variable type of boolean, float, integer or string
	 * @name \Crux\Type\IsVariant::Scalar
	 * @package \Crux\Type\IsVariant
	 * @static
	 * @var int
	 */
	const Scalar = 0x05;

	/**
	 * This constant defines an original variable type of \Crux\Collection\Vector
	 * @name \Crux\Type\IsVariant::Vector
	 * @package \Crux\Type\IsVariant
	 * @static
	 * @var int
	 */
	const Vector = 0x07;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Implementations //////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * This method returns the original invariant data
	 * @access public
	 * @name \Crux\Type\IsVariant::getData()
	 * @package \Crux\Type
	 * @return mixed
	 */
	public function getData();

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} /// End Crux\Type\IsVariant Interface Definition ///////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
